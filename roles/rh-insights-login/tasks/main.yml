---
# vim: sw=2 ts=2 ai expandtab
# tasks file for rhib-login
- name: ensure offline_token is defined
  assert:
    that:
      - offline_token is defined
      - offline_token | length > 0
    fail_msg: Offline token is not defined and is required!

- command: date --utc +%s
  register: epoch
  changed_when: false
- set_fact:
    epoch: "{{ epoch.stdout }}"

- name: check if need to refresh token
  set_fact:
    refresh_token: "{{ tmp | from_yaml }}"
  run_once: true
  vars:
    tmp: |
      changed: true

- debug:
    var: tmp
  vars:
    tmp:
      refresh_token: "{{ refresh_token.changed }}"
      token_expire: "{{ token_expire }}"
      epoch: "{{ epoch }}"

- name: generate token if it's not avail
  ansible.builtin.uri:
    body_format: form-urlencoded
    body:
      grant_type: refresh_token
      client_id: rhsm-api
      refresh_token: "{{ offline_token }}"
    url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
    method: POST
    return_content: false
  register: generate_token
  delegate_to: localhost
  run_once: true
  when: refresh_token is changed

- debug:
    var: generate_token
    verbosity: 2
  run_once: true
  when: refresh_token is changed

- ansible.builtin.set_fact:
    cacheable: true
    token: "{{ generate_token.json.access_token }}"
    token_expire: "{{ (epoch | int) + generate_token.json.expires_in }}"
  run_once: true
  when: refresh_token is changed

- debug:
    var: tokens
    verbosity: 2
  vars:
    tokens:
      offline_token: "{{ offline_token }}"
      token: "{{ token }}"
      token_expire: "{{ token_expire }}"
  run_once: true
  when: refresh_token is changed
